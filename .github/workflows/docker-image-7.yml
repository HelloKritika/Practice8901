name: Build and Push Docker Images to GHCR

on:
  push:
    branches:
      - main  # Adjust as needed

jobs:
   set-up:
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v4
   check:
    runs-on: ubuntu-latest
    needs: set-up
    steps:
      - name: Practice
        run: |
            echo "Found Found"
   build:
    runs-on: ubuntu-latest
    needs: set-up
    strategy:
      matrix:
        include:
          - name: service-a
            context: ./multi-docker-project/service-a
          - name: service-b
            context: ./multi-docker-project/service-b
          - name: sub-profile-b1
            context: multi-docker-project/service-b/sub-profile-b1
          - name: service-c
            context: ./multi-docker-project/service-c
          - name: service-d
            context: ./multi-docker-project

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Docker login
        run: |
             echo "::add-mask::${{ secrets.GITHUB_TOKEN }}"
             echo "${{ secrets.GITHUBTOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Build and Push Docker Images
        run: |
          owner=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          repo_name=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          docker build -t service-a:latest ./multi-docker-project/service-a
          docker build -t service-b:latest ./multi-docker-project/service-b
          docker tag service-a:latest ghcr.io/$owner/$repo_name/service-a:latest
          docker tag service-b:latest ghcr.io/$owner/$repo_name/service-b:latest
          docker push ghcr.io/$owner/$repo_name/service-a:latest
          docker push ghcr.io/$owner/$repo_name/service-b:latest

          
          
